// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using teamSegurosApi.Data;

namespace teamSegurosApi.Migrations
{
    [DbContext(typeof(SgContext))]
    [Migration("20191103221124_UpdateModel")]
    partial class UpdateModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("teamSegurosApi.Models.Ciudad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Ciudades");

                    b.HasData(
                        new
                        {
                            Id = new Guid("89db24be-e235-43b6-af06-4d058490380e"),
                            Nombre = "Bogota"
                        },
                        new
                        {
                            Id = new Guid("788555c6-6e10-4ab5-b04d-1de633c9b6ee"),
                            Nombre = "Medellin"
                        },
                        new
                        {
                            Id = new Guid("ea1832ce-d9bc-454b-8a47-856420903590"),
                            Nombre = "Cali"
                        });
                });

            modelBuilder.Entity("teamSegurosApi.Models.Marca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Marcas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f3bbcfa6-c904-405a-9d0f-2fd5f9541bd8"),
                            Nombre = "Mazda"
                        },
                        new
                        {
                            Id = new Guid("24f3a5fe-85f9-4d93-af4a-4e485e13c348"),
                            Nombre = "Renault"
                        },
                        new
                        {
                            Id = new Guid("5f97f857-ee87-4d06-915d-048236613a7f"),
                            Nombre = "Nissan"
                        });
                });

            modelBuilder.Entity("teamSegurosApi.Models.Modelo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MarcaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("Modelos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("12e3ff4f-5380-4610-a25f-fcb506edd02e"),
                            MarcaId = new Guid("f3bbcfa6-c904-405a-9d0f-2fd5f9541bd8"),
                            Nombre = "Mazda3"
                        },
                        new
                        {
                            Id = new Guid("ec583b81-fb75-48fd-952c-cd5378053b06"),
                            MarcaId = new Guid("24f3a5fe-85f9-4d93-af4a-4e485e13c348"),
                            Nombre = "Symbol"
                        },
                        new
                        {
                            Id = new Guid("7fc3b244-5ce0-4398-a6b7-2776148cd3a4"),
                            MarcaId = new Guid("5f97f857-ee87-4d06-915d-048236613a7f"),
                            Nombre = "Versa"
                        });
                });

            modelBuilder.Entity("teamSegurosApi.Models.Rol", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dab5f3a9-facf-4798-886e-97a6824c0361"),
                            Nombre = "Administrador"
                        },
                        new
                        {
                            Id = new Guid("f067e95d-b9bf-4122-9ef9-86e558177cfa"),
                            Nombre = "Usuario"
                        });
                });

            modelBuilder.Entity("teamSegurosApi.Models.Seguro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.Property<Guid>("VehiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Seguros");
                });

            modelBuilder.Entity("teamSegurosApi.Models.TipoDocumento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("TipoDocumentos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("14c9eebb-f1a4-490e-97b6-e3a50c7d4482"),
                            Nombre = "Cedula de ciudadania"
                        },
                        new
                        {
                            Id = new Guid("4a6ced24-1af6-4e29-bcb2-0f68491d4cca"),
                            Nombre = "Tarjeta de identidad"
                        });
                });

            modelBuilder.Entity("teamSegurosApi.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid>("CiudadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("NumeroDocumento")
                        .HasColumnType("int")
                        .HasMaxLength(50);

                    b.Property<Guid>("RolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TipoDocumentoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CiudadId");

                    b.HasIndex("RolId");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("teamSegurosApi.Models.Vehiculo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Año")
                        .HasColumnType("int");

                    b.Property<Guid>("MarcaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModeloId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.HasIndex("ModeloId");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("teamSegurosApi.Models.Modelo", b =>
                {
                    b.HasOne("teamSegurosApi.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("teamSegurosApi.Models.Seguro", b =>
                {
                    b.HasOne("teamSegurosApi.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("teamSegurosApi.Models.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("teamSegurosApi.Models.Usuario", b =>
                {
                    b.HasOne("teamSegurosApi.Models.Ciudad", "Ciudad")
                        .WithMany()
                        .HasForeignKey("CiudadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("teamSegurosApi.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("teamSegurosApi.Models.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("teamSegurosApi.Models.Vehiculo", b =>
                {
                    b.HasOne("teamSegurosApi.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("teamSegurosApi.Models.Modelo", "Modelo")
                        .WithMany()
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
