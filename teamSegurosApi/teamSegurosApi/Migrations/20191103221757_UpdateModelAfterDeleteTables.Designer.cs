// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using teamSegurosApi.Data;

namespace teamSegurosApi.Migrations
{
    [DbContext(typeof(SgContext))]
    [Migration("20191103221757_UpdateModelAfterDeleteTables")]
    partial class UpdateModelAfterDeleteTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("teamSegurosApi.Models.Ciudad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Ciudades");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5c52fac1-b22e-4eb5-9b37-822220429be3"),
                            Nombre = "Bogota"
                        },
                        new
                        {
                            Id = new Guid("432f31aa-d327-42b8-9f3c-25a245720b2c"),
                            Nombre = "Medellin"
                        },
                        new
                        {
                            Id = new Guid("af5cb727-b75e-4011-a037-3d68f83d54d7"),
                            Nombre = "Cali"
                        });
                });

            modelBuilder.Entity("teamSegurosApi.Models.Marca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Marcas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("46809d9e-c5b1-441f-8c70-b0c084ee9cd9"),
                            Nombre = "Mazda"
                        },
                        new
                        {
                            Id = new Guid("17ee1507-6bef-49ad-ac68-cb607ee75f12"),
                            Nombre = "Renault"
                        },
                        new
                        {
                            Id = new Guid("a6d14c27-8645-4a53-b316-16217320cab5"),
                            Nombre = "Nissan"
                        });
                });

            modelBuilder.Entity("teamSegurosApi.Models.Modelo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MarcaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("Modelos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("74a81ad4-0166-48e6-a673-85fd68b3d5a2"),
                            MarcaId = new Guid("46809d9e-c5b1-441f-8c70-b0c084ee9cd9"),
                            Nombre = "Mazda3"
                        },
                        new
                        {
                            Id = new Guid("573e36ca-f3e3-4b66-993c-d8b28135326b"),
                            MarcaId = new Guid("17ee1507-6bef-49ad-ac68-cb607ee75f12"),
                            Nombre = "Symbol"
                        },
                        new
                        {
                            Id = new Guid("5a5cba5c-b8ea-498e-9e4a-3349fd7d07b1"),
                            MarcaId = new Guid("a6d14c27-8645-4a53-b316-16217320cab5"),
                            Nombre = "Versa"
                        });
                });

            modelBuilder.Entity("teamSegurosApi.Models.Rol", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("54baf4b0-9e98-4c3a-90e2-d3c38111cc92"),
                            Nombre = "Administrador"
                        },
                        new
                        {
                            Id = new Guid("c6c44bfb-7d75-4ae5-a9da-23e91330fd10"),
                            Nombre = "Usuario"
                        });
                });

            modelBuilder.Entity("teamSegurosApi.Models.Seguro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.Property<Guid>("VehiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Seguros");
                });

            modelBuilder.Entity("teamSegurosApi.Models.TipoDocumento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("TipoDocumentos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fbf4bdc4-a7b5-4810-8388-f06a9dfc766b"),
                            Nombre = "Cedula de ciudadania"
                        },
                        new
                        {
                            Id = new Guid("04e2375a-59ee-479b-ae61-c46889aab7fe"),
                            Nombre = "Tarjeta de identidad"
                        });
                });

            modelBuilder.Entity("teamSegurosApi.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid>("CiudadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("NumeroDocumento")
                        .HasColumnType("int")
                        .HasMaxLength(50);

                    b.Property<Guid>("RolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TipoDocumentoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CiudadId");

                    b.HasIndex("RolId");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("teamSegurosApi.Models.Vehiculo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Año")
                        .HasColumnType("int");

                    b.Property<Guid>("MarcaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModeloId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("teamSegurosApi.Models.Modelo", b =>
                {
                    b.HasOne("teamSegurosApi.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("teamSegurosApi.Models.Seguro", b =>
                {
                    b.HasOne("teamSegurosApi.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("teamSegurosApi.Models.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("teamSegurosApi.Models.Usuario", b =>
                {
                    b.HasOne("teamSegurosApi.Models.Ciudad", "Ciudad")
                        .WithMany()
                        .HasForeignKey("CiudadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("teamSegurosApi.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("teamSegurosApi.Models.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("teamSegurosApi.Models.Vehiculo", b =>
                {
                    b.HasOne("teamSegurosApi.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
